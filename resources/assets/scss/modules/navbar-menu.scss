//
// Navbar menu system.
//
// Excuse the specificity.
//
// A static "Account" menu area sits to the right of the search area and contains
// link items with SVG icons top. This menu is a single level.
//
// A dynamic "Primary" menu area sits below the search and contains two WordPress-powered
// standard menus. This contains menus with multiple levels.
//
// Notes:
// [1] WordPress' built in class menu class name. To avoid having to add a custom one.
//

// Both menu containers in the .navbar.
.navbar-menu--account,
.navbar-menu--primary {

	.menu-item { // [1]
		position: relative;

		a {
			text-decoration: none;
			display: flex;
			align-items: center;
		}

		svg {
			fill: #fff;
		}
	}
}

// Both lists in the .navbar.
.navbar-menu__items {

	@include reset-list();
}

// Account menu container.
.navbar-menu--account {
	order: 1;
	margin-left: auto;

	@include media-breakpoint-up( $menu-break-point ) {
		order: 3;
		margin-right: 0;
		margin-left: $spacer;
	}

	// Always list in a line.
	.navbar-menu__items {
		display: flex;
	}

	// All account menu items are the same.
	a {
		color: #fff;
		font-size: $font-size-sm;
		line-height: 1;

		&:hover {
			color: #fff;
		}
	}
}

// Primary container. Holds two menus.
.navbar-menu--primary {
	width: 100%;
	border-top: 1px solid rgba(255, 255, 255, 0.08);

	.offcanvas-drawer__content {
		justify-content: space-between;
		align-items: center;
		display: none;
	}

	@include media-breakpoint-up( $menu-break-point ) {

		.offcanvas-drawer__content {
			display: flex;
			flex-wrap: wrap;
		}
	}

	// Top level list.
	.navbar-menu__items {

		@include media-breakpoint-up( $menu-break-point ) {
			display: flex;
			align-items: center;
		}

		// Top level items.
		> .menu-item { // [1]
			> a {
				color: #fff;
				font-size: $font-size-sm;
				line-height: 1;
				padding: $spacer ($spacer / 2);

				&:hover {
					text-decoration: underline;
				}
			}
		}

		// Top level items with children.
		> .menu-item-has-children {

			> a {
				position: relative;
				padding-right: ($spacer * 1.5);

				&::after {
					content: "";
					position: absolute;
					right: 7px;
					top: calc(50% - 2px);
					width: 0;
					height: 0;
					border-left: 5px solid transparent;
					border-right: 5px solid transparent;
					border-top: 4px solid #fff;
				}
			}
		}
	}

	// All links links.
	.menu-item { // [1]
		position: relative;

		// Show submenu items when intended.
		&:hover > .sub-menu,
		&:focus > .sub-menu,
		.sub-menu:hover,
		.sub-menu:focus,
		&.focus > .sub-menu,
		&.menu-item-has-children--active > .sub-menu {
			visibility: visible;
			opacity: 1;
		}

		$icon-dim: $icon-w * map-get($icon-size-multipliers, "xs");

		// Icons.
		> a::before,
		i.bigbox-icon {
			width: $icon-dim;
			height: $icon-dim;
			mask-size: $icon-dim;
			background-color: #fff;
		}
	}

	.menu-item:focus-within > .sub-menu {
		visibility: visible;
		opacity: 1;
	}

	// Dropdowns.
	.sub-menu {

		@include reset-list();

		padding: ($spacer / 2) 0;
		visibility: hidden;
		opacity: 0;
		min-width: 250px;
		background: #fff;
		border: 1px solid gray("300");
		border-top: 0;
		box-shadow: rgba(0, 0, 0, 0.1) 0 1px 3px;
		position: absolute;
		top: 100%;
		z-index: 10;
		transition: all 0.1s ease-in-out;
		transform-origin: top left;

		@include border-bottom-radius();

		a {
			color: gray("700");
		}

		.menu-item {
			font-size: 0.9rem;
			padding: ($spacer / 3) $spacer;
			position: initial;

			// Icons.
			> a::before,
			i.bigbox-icon {
				background-color: gray("700");
			}
		}

		.menu-item-has-children > a {
			position: relative;

			&::after {
				content: "";
				position: absolute;
				right: 0;
				top: calc(50% - 5px);
				width: 0;
				height: 0;
				border-top: 5px solid transparent;
				border-bottom: 5px solid transparent;
			}
		}

		.sub-menu {
			top: 0;
			min-height: calc(100% + 1px);
		}
	}
}

// Left menu flys out to the right.
.navbar-menu__items-primary {
	margin-left: -($spacer / 2);

	.sub-menu {
		left: 0;

		&--has-sibling {
			border-bottom-right-radius: 0;
		}

		.sub-menu {
			left: 100%;
			border-bottom-left-radius: 0;
		}

		.menu-item-has-children > a {

			&::after {
				border-left: 4px solid gray("400");

				/* rtl:ignore */
				.rtl & {
					border-right: 4px solid gray("400");
					border-left-color: 0;
				}
			}
		}
	}
}

// Right menu flys out to the left.
.navbar-menu__items-secondary {
	margin-right: -($spacer / 2);
	margin-left: -($spacer / 2);

	.sub-menu {
		right: 0;

		&--has-sibling {
			border-bottom-left-radius: 0;
		}

		.sub-menu {
			right: 100%;
			border-bottom-right-radius: 0;
		}

		.menu-item-has-children > a {
			padding-left: 1rem;

			&::after {
				left: 0;
				right: auto;
				border-right: 4px solid gray("400");

				.rtl & {
					border-left: 4px solid gray("400");
				}
			}
		}
	}
}

.navbar-menu__item--stacked {

	a {
		text-align: center;
		line-height: 1;
		min-width: 70px;
		padding: 4px;
		flex-direction: column;
		border: 1px solid transparent;

		@include border-radius();

		&:hover {
			opacity: 1;
			text-decoration: none;
			border: 1px solid rgba(255, 255, 255, 0.2);

			svg {
				fill: #fff;
			}
		}
	}

	svg {
		margin: 0 0 2px;
		display: block;
		width: 20px;
		height: 20px;
	}
}

.navbar-menu__cart-count {
	color: #fff;
	font-size: $font-size-xs;
	line-height: 1;
	position: absolute;
	top: -4px;
	left: 50%;
	transform: translate3d(-25px, 0, 0);
	background: theme-color("success");
	border-radius: 15px;
	min-width: 20px;
	height: 20px;
	padding: 0 5px;
	display: flex;
	align-items: center;
	justify-content: center;
}
